// spotService.js (or whatever you choose to name it)
const mongoose = require('mongoose');
const Spot = require('./path/to/your/spotModel'); // Adjust the path to your Spot model

// Connect to MongoDB
const mongoURI = process.env.MONGO_URI; // Your MongoDB connection string
mongoose.connect(mongoURI, { useNewUrlParser: true, useUnifiedTopology: true })
  .then(() => console.log('MongoDB connected'))
  .catch(err => console.error('MongoDB connection error:', err));

// Function to create a new Spot
const createSpot = async (name, coordinates, rating, placeId, photo, primaryType, allTypes) => {
  const spotData = {
    name: name,
    placeId: placeId,  // Assuming this is an address or identifier
    location: {
      lat: coordinates.lat,
      lng: coordinates.lng,
    },
    type: primaryType,
    rating: rating,
    photo: photo,      // Store the photo URL
    allTypes: allTypes, // Store all types as an array
    reviews: [], // Initialize with an empty array if you want to add reviews later
  };

  // Create the Spot instance
  const spot = new Spot(spotData);

  try {
    const savedSpot = await spot.save();
    console.log('New Spot created:', savedSpot);
  } catch (error) {
    console.error('Error creating Spot:', error);
  }
};

// Example usage
createSpot(
  'My Favorite Restaurant',
  { lat: 34.0522, lng: -118.2437 },  // Example coordinates
  4.5,  // Example rating
  '123 Main St, Los Angeles, CA',  // Example address
  'https://example.com/photo.jpg',  // Example photo URL
  'Restaurant',  // Example primary type
  ['Restaurant', 'Bar']  // Example all types
);
